# -*- coding: utf-8 -*-
"""newsapi sentiment analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FkpXmikyDCCiUhwuSgMFvjVVvMiDB9DY
"""

import requests
from nltk.sentiment import SentimentIntensityAnalyzer
import nltk

# Download VADER for sentiment analysis
nltk.download('vader_lexicon')

# Your News API key
API_KEY = '917931d6b9dd483bb18622b5d2251b55'  # Replace with your actual News API key

# Function to fetch news articles based on company name
def fetch_news_articles(company_name):
    url = f'https://newsapi.org/v2/everything?q={company_name}&apiKey={API_KEY}'
    response = requests.get(url)
    if response.status_code == 200:
        articles = response.json().get('articles', [])
        return articles
    else:
        print(f"Error fetching news: {response.status_code}")
        return []

# Function to perform sentiment analysis
def analyze_sentiment(articles):
    sia = SentimentIntensityAnalyzer()
    sentiments = []

    for article in articles:
        title = article.get('title', '')
        description = article.get('description', '')
        content = (title + ' ' + description).strip()

        # Calculate sentiment scores
        sentiment = sia.polarity_scores(content)
        sentiments.append(sentiment)

    return sentiments

# Function to calculate average sentiment scores
def calculate_average_sentiment(sentiments):
    if not sentiments:
        return None

    avg_sentiment = {
        'neg': 0,
        'neu': 0,
        'pos': 0,
        'compound': 0
    }

    for sentiment in sentiments:
        avg_sentiment['neg'] += sentiment['neg']
        avg_sentiment['neu'] += sentiment['neu']
        avg_sentiment['pos'] += sentiment['pos']
        avg_sentiment['compound'] += sentiment['compound']

    num_sentiments = len(sentiments)
    avg_sentiment = {k: v / num_sentiments for k, v in avg_sentiment.items()}

    return avg_sentiment

# Main function
def main():
    company_name = input("Enter the company name (e.g., 'Apple', 'Google'): ").strip()

    # Fetch news articles
    articles = fetch_news_articles(company_name)

    if not articles:
        print("No articles found.")
        return

    # Perform sentiment analysis
    sentiment_results = analyze_sentiment(articles)

    # Calculate average sentiment scores
    avg_sentiment = calculate_average_sentiment(sentiment_results)

    if avg_sentiment:
        print("\nAverage Sentiment Scores:")
        print(f"Negative: {avg_sentiment['neg']:.4f}")
        print(f"Neutral: {avg_sentiment['neu']:.4f}")
        print(f"Positive: {avg_sentiment['pos']:.4f}")
        print(f"Compound: {avg_sentiment['compound']:.4f}")

# Example usage
if __name__ == "__main__":
    main()